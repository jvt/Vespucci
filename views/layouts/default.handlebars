<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Vespucci</title>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
	<link rel="stylesheet" type="text/css" href="/stylesheets/style.css">
	<link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Raleway">
	<style type="text/css">
		html, body { height: 100%; margin: 0; padding: 0; }
		#map { height: 100%; }
	</style>
</head>
<body>
	{{{ body }}}
	<script type="text/javascript" src="http://code.jquery.com/jquery.min.js"></script>
	<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCtBRLsMk9pVw7q7nCAjazKRTzf5J5fi9A&signed_in=false&libraries=places&callback=initAutocomplete" async defer></script>
	<script type="text/javascript">
		var globaljson, sourceLat, sourceLng, infowindow;
		var maxNumberLocations = 10;

		// * creates a map at a specified latitude and longitude
		function instantiateMap(alat, along) {
			var myLatLng = {lat: alat, lng: along};
			var map = new google.maps.Map(document.getElementById('map'), {
				zoom: 14,
				center: myLatLng
			});
			return map;
		}

		function makeLocation(json, obj){
			var instalinks = [];
			var contentCount = 0;
			for(var insta in json[obj].instagram) {
				instalinks.push(json[obj].instagram[insta].link);
				contentCount += 2;
			}
			var location = {};
			location.lat = json[obj].loc.latitude;
			location.lng = json[obj].loc.longitude;
			location.eventname = json[obj].loc.name;
			location.instagram = instalinks;
			location.count = contentCount;
			if(json[obj].foursquare) {
				if(json[obj].foursquare.location){
					location.address = json[obj].foursquare.location.formattedAddress[0];
				}
			}
			if (json[obj].foursquare) {
				if(json[obj].foursquare.contact){
					location.phone = json[obj].foursquare.contact.formattedPhone;
				}
			}
			if(json[obj].foursquare){
				if(json[obj].foursquare.stats){
					location.visitors = json[obj].foursquare.stats.checkinsCount;
				}
			}
			location.placename = json[obj].foursquare.name;
			return location;
		}
		/*
		* latitude, longitude, sentiment, size. Creates a dot on the map
		*/
		function addMarker(currentLatLng, map, title) {
			var marker = new google.maps.Marker({
				position: currentLatLng,
				map: map,
				title: 'Hello World!'
			});
			return marker;
		}

		function initMap() {
			var startPoint = {
				lat: 33.783315,
				lng: -84.385
			};				  
			var map = instantiateMap(startPoint.lat, startPoint.lng);

			var update = startPoint.lng;
			var timerDelay = 800;
			var eventListen = false;

			panningEffect();

			function panningEffect(){
				if (!eventListen){
					update += Math.random() * (0.02 - 0.050) + 0.050;
					startPoint = {
						lat: 33.783315 + (Math.random() * (0.02 - 0.050) + 0.050),
						lng: update
					};
					map.panTo(startPoint);
					setTimeout(panningEffect, timerDelay);
					timerDelay += 800;

					$("#locationbutton").click(function() {
						eventListen = true;
					});
					$("#autocomplete").focus(function() {
						eventListen = true;
					  $(window).keydown(function(event){
					    if(event.keyCode == 13) {
					      event.preventDefault();
					      return false;
					    }
					  });
					});
				}
			}			  
		}

		function gettext (url, callback) {
			var request = new XMLHttpRequest();
			request.onreadystatechange = function()
			{
				if (request.readyState == 4 && request.status == 200)
				{
					mycallback(request.responseText); // Another callback here
				}
			}; 
			request.open('GET', '/api/search/' + sourceLat + "/" + sourceLng);
			request.send();
		}

		//populate the map
		function mycallback(data) {
			var json = $.parseJSON(data).blurbData;
				
			console.log(json)

			for (locationIndex in json) {
				latitude = json[locationIndex].lat;
				longitude = json[locationIndex].lng;

			  	cityCircle = new google.maps.Circle({
			  		strokeColor: '#FF0000',
			  		strokeOpacity: 0.8,
			  		strokeWeight: 2,
			  		fillColor: '#FF0000',
			  		fillOpacity: 0.35,
			  		map: map,			  		
			  		center: {lat: json[locationIndex].lat, lng:json[locationIndex].lng},
			  		radius: json[locationIndex].instagramScore * 20
			  	});

			  	/*
						Event name, phone, Address
						insta
						Num of visitors
						Lets Go
			  	*/
			  	//get all the stuufs  we need
                  //latitude, longitude 
                var latitude = json[locationIndex].lat;
                var longitude = json[locationIndex].lng;
                var eventName = json[locationIndex].eventname;
                var instaLinks = [];
                if(json[locationIndex].instagramCount >= 1) {
                    instaLinks = json[locationIndex].instagram;
                }
                var instaLink;
                if (instaLinks.length >= 1) {
                	instaLink = instaLinks[0];
                } else {
                	instaLink = "";
                }

                var address = json[locationIndex].address;
                var phone = json[locationIndex].phone;
                var visitors = json[locationIndex].visitors;

                var link = encodeURI('https://maps.google.com?saddr=' + sourceLat + ',' + sourceLng + '&daddr=' + latitude + ',' + longitude);
                console.log(link);
			  	var contentString = 
			  	'<div class="container blurbContent">' +
				      '<div id="siteNotice">' +
				      '</div>' +
				      '<div id="bodyContent">' +
				      	'<div class="top">' +
					      	'<div class ="leftDiv">' +
							      '<h1 class="blurbHeader">' + 
							      	//Event name
							      	eventName +
							      '</h1>' +
							      '<p class="eventDesc">' +
							      		// Phone number
							      		phone + 
							      	'<br>' + 
							      		// Address
							      		address + 
							      '</p>' +
							      '<hr>' +
							      '<p class="eventDesc">' + 
							      	'No. of visitors' +
							      '</p>' +
							      '<p class="visitValue">' +
							      	//No. of Visitors
							      	visitors +
							      '</p>' +
							    '</div>'+

						      '<div class ="rightDiv">' +
							      '<p class="eventDesc">Snap from the event</p>' +
						      	'<iframe id="instagram" width="150px" height="200px" src="' +
						      		//Instagram URL goes here
						      		instaLink+
						      	'embed" frameborder="0"></iframe>' +
					      	'</div>' +
					      '</div>' +
					      '<hr>' +
					      '<div class="break"></div>' +
					      '<div class="footer">' +
					      	'<a href="' +
					      		link +
					      	'" id="leggo"><button class="btn btn-success"> Let\'s Go!</button></a>' +
					      '</div>' +
				      '</div>'+
			      '</div>';

			  	cityCircle.info = new google.maps.InfoWindow ({
			  		// content: 'swerve ' + latitude,
			  		content: contentString,
			  		maxWidth: 450,
			  		position: {lat: latitude, lng:longitude}
			  	});

			  	google.maps.event.addListener(cityCircle, 'click', function() {
	    			if (infowindow) infowindow.close();
	    			infowindow = this.info;
	    			this.info.open(map, this);
	    			infowindow.open(map, marker);
					});

					google.maps.Map.prototype.clearMarkers = function() {
				    if(infowindow) {
				      infowindow.close();
				    }
				    
				    for(var i=0; i<this.markers.length; i++){
				      this.markers[i].set_map(null);
				    }
				  };



			}
		}	


		function showArrays(event) {
			console.log("s");
			infoWindow.setContent('swerve');
			infoWindow.setPosition(event.latLng);
			infoWindow.open(map);

		}

		window.onload = function() {
			initMap();
		}

		function initAutocomplete() {
			// Create the autocomplete object

			autocomplete = new google.maps.places.Autocomplete((document.getElementById('autocomplete')), {
				types: ['geocode']
			});

			// When the user selects an address from the dropdown, populate the address, sends the lat long
			autocomplete.addListener('place_changed', function() {
				var place = autocomplete.getPlace().geometry.location;
				var lat = place.H;
				var lng = place.L;

				var currentLatLng = {
					lat: lat,
					lng: lng
				};

				map.panTo(currentLatLng);
				var marker = new google.maps.Marker({
					position: currentLatLng,
					map: map,
					title: 'Hello World!'
				});
				var marker = addMarker(currentLatLng, map, 'Hello World!');

				console.log("Success through autocomplete!")
				console.log("latitude: " + lat);
				console.log("longitude: " +  lng);

				sourceLat = lat;
				sourceLng = lng;
				gettext(null, mycallback);
				animateTransition();
			});
		}

		// Button is clicked, sends lat and long based on your current location
		function geolocate() {
			if (navigator.geolocation) {
				navigator.geolocation.getCurrentPosition(function(position) {
					var lat = position.coords.latitude;
					var lng = position.coords.longitude;

					var currentLatLng = {
						lat: lat,
						lng: lng
					};
					map.panTo(currentLatLng);
					var marker = new google.maps.Marker({
						position: currentLatLng,
						map: map,
						title: 'Hello World!'
					});
					var marker = addMarker(currentLatLng, map, 'Hello World!');

					console.log("Success through geolocation!");
					console.log("latitude: " + lat);
					console.log("longitude: " +  lng);

					sourceLat = lat;
					sourceLng = lng;
					gettext(null, mycallback);
					animateTransition();
				});
			}
		}

		// Transition from front to main
		function animateTransition() {
    	$("#options").fadeOut('slow', function() {
    		$("#mainlogo").fadeOut('slow', function() {
    			$("#searchBar").css({
	    			"top": "-100px",
	    			"left": "50px"
	    		});
	    		$("#searchBar").fadeIn('slow');
	    		$("#headerbackground").css({
	    			"backgroundColor": "#AA4652"
	    		});
	    		$("#headercontent").css({
	    			"width": "90%"
	    		});
	    		$("#smalllogo").fadeIn('slow');
    		
	    		$("#blur").css({
	    			"display": "none"
	    		})

					$("#back").css("display","none");
    		});
    	});
		}

		$("#searchbutton").click(function() {
			$("#options").fadeOut(function(){
				$("#searchBar").fadeIn('slow');
			});
		});

		/*
		 * creates a map at a specified latitude and longitude
		 */
		 function instantiateMap(alat, along) {
		 	var myLatLng = {lat: alat, lng: along};


		 	var styleArray = [
		 	{
		 		featureType: "all",
		 		stylers: [
		 		{ saturation: -100 }
		 		]
		 	},{
		 		featureType: "road.arterial",
		 		elementType: "geometry",
		 		stylers: [
		 		{ hue: "#00ffee" },
		 		{ saturation: 50 }
		 		]
		 	},{
		 		featureType: "poi.business",
		 		elementType: "labels",
		 		stylers: [
		 		{ visibility: "off" }
		 		]
		 	}
		 	];
		 	var mapOptions = {
		 		disableDefaultUI: true,
		 		disableDoubleClickZoom: true,
		 		scrollwheel: false,
		 		navigationControl: false,
		 		mapTypeControl: false,
		 		scaleControl: false,
		 		draggable: true,
		 		mapTypeId: google.maps.MapTypeId.ROADMAP,
		 		center: myLatLng,
		 		zoom: 14,
		 		styles: styleArray
		 	};
		 	map = new google.maps.Map(document.getElementById('map'), mapOptions);

		 	return map;
		 }

    	/*
    	 * latitude, longitude, sentiment, size. Creates a dot on the map
    	 */
    	 function addMarker(currentLatLng, map, title) {
    	 	var marker = new google.maps.Marker({
    	 		position: currentLatLng,
    	 		map: map,
    	 		title: 'Hello World!'
    	 	});
    	 	return marker;
    	 }

    	</script>
    	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
    	<script>
    		(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    			(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    			m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    		})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    		ga('create', 'UA-54131867-7', 'auto');
    		ga('send', 'pageview');

    	</script>
    </body>
    </html>